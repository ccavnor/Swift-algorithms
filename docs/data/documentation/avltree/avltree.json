{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AVLTree"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"TreeValueP","preciseIdentifier":"s:12TreeProtocol0A6ValuePP"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/avltree\/avltree"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/AVLTree\/16BinarySearchTreeAAC"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/AVLTree\/s23CustomStringConvertibleP","doc:\/\/AVLTree\/12TreeProtocol0A1PP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"AVLTree is a BST that self balances iff the subtrees are more than one level of difference in height."},{"type":"text","text":" "},{"type":"text","text":"Like the BST, the AVL tree is a classification, not a Bag data structure - so duplicate values are"},{"type":"text","text":" "},{"type":"text","text":"not allowed."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AVLTree"}],"title":"AVLTree","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:7AVLTreeAAC","modules":[{"name":"AVLTree"}],"navigatorTitle":[{"kind":"identifier","text":"AVLTree"}]},"hierarchy":{"paths":[["doc:\/\/AVLTree\/documentation\/AVLTree"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/init(array:)","doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/init(node:)","doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/init(value:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/root"]},{"title":"Instance Methods","identifiers":["doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/balance()","doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/inOrderCheckBalanced(_:)","doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/insert(node:)","doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/lrDifference(node:)","doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/remove(value:)","doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/updateHeightUpwards(node:)"]},{"title":"Subscripts","identifiers":["doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/subscript(_:)"]}],"references":{"doc://AVLTree/documentation/AVLTree/AVLTree/insert(node:)":{"role":"symbol","title":"insert(node:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AVLTreeNode","preciseIdentifier":"s:7AVLTree0A4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"AVLTreeNode","preciseIdentifier":"s:7AVLTree0A4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Inserts a new element into the tree. Duplicate values are ignored, but this incurs a lookup penalty of O(h)."},{"type":"text","text":" "},{"type":"text","text":"Performance: runs in O(h) time, where h is the height of the tree, plus O(log(n)) time for balancing."}],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/insert(node:)","kind":"symbol","type":"topic","url":"\/documentation\/avltree\/avltree\/insert(node:)"},"doc://AVLTree/documentation/AVLTree/AVLTree/remove(value:)":{"role":"symbol","title":"remove(value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AVLTreeNode","preciseIdentifier":"s:7AVLTree0A4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">?"}],"abstract":[],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/remove(value:)","kind":"symbol","type":"topic","url":"\/documentation\/avltree\/avltree\/remove(value:)"},"doc://AVLTree/documentation/AVLTree/AVLTree/init(array:)":{"role":"symbol","title":"init(array:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"array"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"])"}],"abstract":[],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/init(array:)","kind":"symbol","type":"topic","url":"\/documentation\/avltree\/avltree\/init(array:)"},"doc://AVLTree/documentation/AVLTree/AVLTree/subscript(_:)":{"role":"symbol","title":"subscript(_:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/subscript(_:)","kind":"symbol","type":"topic","url":"\/documentation\/avltree\/avltree\/subscript(_:)"},"doc://AVLTree/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/AVLTree\/s23CustomStringConvertibleP"},"doc://AVLTree/documentation/AVLTree":{"role":"collection","title":"AVLTree","abstract":[],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree","kind":"symbol","type":"topic","url":"\/documentation\/avltree"},"doc://AVLTree/documentation/AVLTree/AVLTree":{"role":"symbol","title":"AVLTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AVLTree"}],"abstract":[{"type":"text","text":"AVLTree is a BST that self balances iff the subtrees are more than one level of difference in height."},{"type":"text","text":" "},{"type":"text","text":"Like the BST, the AVL tree is a classification, not a Bag data structure - so duplicate values are"},{"type":"text","text":" "},{"type":"text","text":"not allowed."}],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AVLTree"}],"url":"\/documentation\/avltree\/avltree"},"doc://AVLTree/documentation/AVLTree/AVLTree/updateHeightUpwards(node:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"TreeValueP"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"updateHeightUpwards(node:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateHeightUpwards"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AVLTreeNode","preciseIdentifier":"s:7AVLTree0A4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Updates height property of AVLTreeNode, starting with the node and working up to root"}],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/updateHeightUpwards(node:)","kind":"symbol","type":"topic","url":"\/documentation\/avltree\/avltree\/updateheightupwards(node:)"},"doc://AVLTree/16BinarySearchTreeAAC":{"type":"unresolvable","title":"BinarySearchTree.BinarySearchTree","identifier":"doc:\/\/AVLTree\/16BinarySearchTreeAAC"},"doc://AVLTree/documentation/AVLTree/AVLTree/inOrderCheckBalanced(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"TreeValueP"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"inOrderCheckBalanced(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"inOrderCheckBalanced"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AVLTreeNode","preciseIdentifier":"s:7AVLTree0A4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">?) "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Throws TreeError.notBalanced iff the tree is imbalanced. Our threshold for inbalance is only a height"},{"type":"text","text":" "},{"type":"text","text":"difference of one between branches, where as auto balance uses a threshold of two nodes difference."}],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/inOrderCheckBalanced(_:)","kind":"symbol","type":"topic","url":"\/documentation\/avltree\/avltree\/inordercheckbalanced(_:)"},"doc://AVLTree/documentation/AVLTree/AVLTree/init(node:)":{"role":"symbol","title":"init(node:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AVLTreeNode","preciseIdentifier":"s:7AVLTree0A4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/init(node:)","kind":"symbol","type":"topic","url":"\/documentation\/avltree\/avltree\/init(node:)"},"doc://AVLTree/documentation/AVLTree/AVLTree/root":{"role":"symbol","title":"root","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"root"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BinarySearchTreeNode","preciseIdentifier":"s:16BinarySearchTree0abC4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">?"}],"abstract":[],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/root","kind":"symbol","type":"topic","url":"\/documentation\/avltree\/avltree\/root"},"doc://AVLTree/documentation/AVLTree/AVLTree/lrDifference(node:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"TreeValueP"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"lrDifference(node:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lrDifference"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AVLTreeNode","preciseIdentifier":"s:7AVLTree0A4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/lrDifference(node:)","kind":"symbol","type":"topic","url":"\/documentation\/avltree\/avltree\/lrdifference(node:)"},"doc://AVLTree/documentation/AVLTree/AVLTree/balance()":{"role":"symbol","title":"balance()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"balance"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns true iff tree balancing occurs. Tree will only balance under set constraints. Rotations"},{"type":"text","text":" "},{"type":"text","text":"will take care of unmarking the previous root and marking the new one, if root changes during balancing."}],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/balance()","kind":"symbol","type":"topic","url":"\/documentation\/avltree\/avltree\/balance()"},"doc://AVLTree/documentation/AVLTree/AVLTree/init(value:)":{"role":"symbol","title":"init(value:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/AVLTree\/documentation\/AVLTree\/AVLTree\/init(value:)","kind":"symbol","type":"topic","url":"\/documentation\/avltree\/avltree\/init(value:)"},"doc://AVLTree/12TreeProtocol0A1PP":{"type":"unresolvable","title":"TreeProtocol.TreeP","identifier":"doc:\/\/AVLTree\/12TreeProtocol0A1PP"}}}