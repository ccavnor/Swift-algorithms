{"abstract":[{"type":"text","text":"Get a list of the target’s parents from the root of the tree to the immediate parent."},{"text":" ","type":"text"},{"text":"Always matches the most top-level target (ignoring lower nodes with duplicate values). If you need the parent of another node with the same value,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"use search to get the subtree  with  distict values and call parents on that."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ValueBasedBinarySearchTree\/documentation\/ValueBasedBinarySearchTree\/BinarySearchTree\/parents(of:using:)"},"kind":"symbol","sections":[],"metadata":{"modules":[{"name":"ValueBasedBinarySearchTree"}],"role":"symbol","title":"parents(of:using:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parents"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"using"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:26ValueBasedBinarySearchTree0cdE0O7parents2of5usingyx_yxXEtF"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/valuebasedbinarysearchtree\/binarysearchtree\/parents(of:using:)"]}],"hierarchy":{"paths":[["doc:\/\/ValueBasedBinarySearchTree\/documentation\/ValueBasedBinarySearchTree","doc:\/\/ValueBasedBinarySearchTree\/documentation\/ValueBasedBinarySearchTree\/BinarySearchTree"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parents"},{"kind":"text","text":"("},{"text":"of","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"target"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"text":"using","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"accumulator"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"target","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to backtrack from"}]}]},{"name":"accumulator","content":[{"type":"paragraph","inlineContent":[{"text":"(T) -> Void closure for storing parent values","type":"text"}]}]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Performance:  O(h), where h is height of tree. Only one half of tree is ever traversed."}],"type":"paragraph"}]}]}],"kind":"content"}],"references":{"doc://ValueBasedBinarySearchTree/documentation/ValueBasedBinarySearchTree/BinarySearchTree/parents(of:using:)":{"url":"\/documentation\/valuebasedbinarysearchtree\/binarysearchtree\/parents(of:using:)","kind":"symbol","role":"symbol","title":"parents(of:using:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"parents","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"using","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ValueBasedBinarySearchTree\/documentation\/ValueBasedBinarySearchTree\/BinarySearchTree\/parents(of:using:)","abstract":[{"type":"text","text":"Get a list of the target’s parents from the root of the tree to the immediate parent."},{"text":" ","type":"text"},{"text":"Always matches the most top-level target (ignoring lower nodes with duplicate values). If you need the parent of another node with the same value,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"use search to get the subtree  with  distict values and call parents on that."}],"type":"topic"},"doc://ValueBasedBinarySearchTree/documentation/ValueBasedBinarySearchTree":{"type":"topic","abstract":[],"kind":"symbol","title":"ValueBasedBinarySearchTree","identifier":"doc:\/\/ValueBasedBinarySearchTree\/documentation\/ValueBasedBinarySearchTree","role":"collection","url":"\/documentation\/valuebasedbinarysearchtree"},"doc://ValueBasedBinarySearchTree/documentation/ValueBasedBinarySearchTree/BinarySearchTree":{"identifier":"doc:\/\/ValueBasedBinarySearchTree\/documentation\/ValueBasedBinarySearchTree\/BinarySearchTree","abstract":[{"text":"An immutable Binary Search Tree (BST) using Enum value type. Each insertion or deletion will create a new BST.","type":"text"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BinarySearchTree"}],"url":"\/documentation\/valuebasedbinarysearchtree\/binarysearchtree","navigatorTitle":[{"text":"BinarySearchTree","kind":"identifier"}],"title":"BinarySearchTree","kind":"symbol","role":"symbol"}}}