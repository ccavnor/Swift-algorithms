{"identifier":{"url":"doc:\/\/ValueBasedBinarySearchTree\/documentation\/ValueBasedBinarySearchTree\/BinarySearchTree\/traversePostOrder(process:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ValueBasedBinarySearchTree\/documentation\/ValueBasedBinarySearchTree","doc:\/\/ValueBasedBinarySearchTree\/documentation\/ValueBasedBinarySearchTree\/BinarySearchTree"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"traversePostOrder"},{"kind":"text","text":"("},{"text":"process","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","metadata":{"title":"traversePostOrder(process:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"traversePostOrder","kind":"identifier"},{"kind":"text","text":"("},{"text":"process","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:26ValueBasedBinarySearchTree0cdE0O17traversePostOrder7processyyxXE_tF","modules":[{"name":"ValueBasedBinarySearchTree"}],"role":"symbol","roleHeading":"Instance Method"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/valuebasedbinarysearchtree\/binarysearchtree\/traversepostorder(process:)"]}],"sections":[],"references":{"doc://ValueBasedBinarySearchTree/documentation/ValueBasedBinarySearchTree/BinarySearchTree":{"identifier":"doc:\/\/ValueBasedBinarySearchTree\/documentation\/ValueBasedBinarySearchTree\/BinarySearchTree","abstract":[{"text":"An immutable Binary Search Tree (BST) using Enum value type. Each insertion or deletion will create a new BST.","type":"text"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BinarySearchTree"}],"url":"\/documentation\/valuebasedbinarysearchtree\/binarysearchtree","navigatorTitle":[{"text":"BinarySearchTree","kind":"identifier"}],"title":"BinarySearchTree","kind":"symbol","role":"symbol"},"doc://ValueBasedBinarySearchTree/documentation/ValueBasedBinarySearchTree/BinarySearchTree/traversePostOrder(process:)":{"title":"traversePostOrder(process:)","kind":"symbol","url":"\/documentation\/valuebasedbinarysearchtree\/binarysearchtree\/traversepostorder(process:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"traversePostOrder","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"process"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[],"role":"symbol","identifier":"doc:\/\/ValueBasedBinarySearchTree\/documentation\/ValueBasedBinarySearchTree\/BinarySearchTree\/traversePostOrder(process:)"},"doc://ValueBasedBinarySearchTree/documentation/ValueBasedBinarySearchTree":{"type":"topic","abstract":[],"kind":"symbol","title":"ValueBasedBinarySearchTree","identifier":"doc:\/\/ValueBasedBinarySearchTree\/documentation\/ValueBasedBinarySearchTree","role":"collection","url":"\/documentation\/valuebasedbinarysearchtree"}}}