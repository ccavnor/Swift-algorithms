{"abstract":[{"type":"text","text":"A Stack is a last-in-first-out (LIFO) data structure."},{"type":"text","text":" "},{"type":"text","text":"This is  implementation uses a linked list as the underlying container."}],"metadata":{"externalID":"s:5StackAAC","navigatorTitle":[{"text":"Stack","kind":"identifier"}],"roleHeading":"Class","role":"symbol","symbolKind":"class","title":"Stack","modules":[{"name":"Stack"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Stack"}]},"sections":[],"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/Stack\/documentation\/Stack\/Stack\/init()"],"generated":true},{"identifiers":["doc:\/\/Stack\/documentation\/Stack\/Stack\/isEmpty","doc:\/\/Stack\/documentation\/Stack\/Stack\/size"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/Stack\/documentation\/Stack\/Stack\/contains(_:)","doc:\/\/Stack\/documentation\/Stack\/Stack\/makeIterator()","doc:\/\/Stack\/documentation\/Stack\/Stack\/peek()","doc:\/\/Stack\/documentation\/Stack\/Stack\/pop()","doc:\/\/Stack\/documentation\/Stack\/Stack\/push(_:)","doc:\/\/Stack\/documentation\/Stack\/Stack\/removeAll()"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Stack\/documentation\/Stack\/Stack\/CustomStringConvertible-Implementations","doc:\/\/Stack\/documentation\/Stack\/Stack\/ExpressibleByArrayLiteral-Implementations","doc:\/\/Stack\/documentation\/Stack\/Stack\/Sequence-Implementations"],"anchor":"Default-Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Stack","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SL","text":"Comparable"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Stack\/documentation\/Stack\/Stack"},"hierarchy":{"paths":[["doc:\/\/Stack\/documentation\/Stack"]]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Stack\/22IteratableListProtocol0A1PP","doc:\/\/Stack\/s8CopyableP","doc:\/\/Stack\/s23CustomStringConvertibleP","doc:\/\/Stack\/s25ExpressibleByArrayLiteralP","doc:\/\/Stack\/ST"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/stack\/stack"]}],"references":{"doc://Stack/documentation/Stack/Stack/pop()":{"title":"pop()","abstract":[{"type":"text","text":"Pop (dequeue) an element from Stack and return it."}],"url":"\/documentation\/stack\/stack\/pop()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"pop","kind":"identifier"},{"kind":"text","text":"() -> ("},{"kind":"typeIdentifier","text":"T"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/pop()","kind":"symbol","type":"topic","role":"symbol"},"doc://Stack/documentation/Stack/Stack/CustomStringConvertible-Implementations":{"kind":"article","type":"topic","title":"CustomStringConvertible Implementations","url":"\/documentation\/stack\/stack\/customstringconvertible-implementations","abstract":[],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/CustomStringConvertible-Implementations","role":"collectionGroup"},"doc://Stack/s23CustomStringConvertibleP":{"identifier":"doc:\/\/Stack\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://Stack/documentation/Stack/Stack/removeAll()":{"kind":"symbol","type":"topic","title":"removeAll()","url":"\/documentation\/stack\/stack\/removeall()","abstract":[{"text":"Remove all elements of the Stack","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"removeAll","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/removeAll()","role":"symbol"},"doc://Stack/documentation/Stack/Stack/Sequence-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/stack\/stack\/sequence-implementations","title":"Sequence Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/Sequence-Implementations"},"doc://Stack/documentation/Stack/Stack/peek()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"peek"},{"text":"() -> (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"kind":"symbol","abstract":[{"text":"Return the next element to be popped (without removing it from the Stack).","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/peek()","url":"\/documentation\/stack\/stack\/peek()","title":"peek()"},"doc://Stack/documentation/Stack/Stack/init()":{"title":"init()","abstract":[],"url":"\/documentation\/stack\/stack\/init()","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/init()","kind":"symbol","type":"topic","role":"symbol"},"doc://Stack/documentation/Stack/Stack":{"url":"\/documentation\/stack\/stack","navigatorTitle":[{"text":"Stack","kind":"identifier"}],"abstract":[{"type":"text","text":"A Stack is a last-in-first-out (LIFO) data structure."},{"type":"text","text":" "},{"text":"This is  implementation uses a linked list as the underlying container.","type":"text"}],"kind":"symbol","title":"Stack","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Stack","kind":"identifier"}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack","type":"topic"},"doc://Stack/documentation/Stack/Stack/ExpressibleByArrayLiteral-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/ExpressibleByArrayLiteral-Implementations","title":"ExpressibleByArrayLiteral Implementations","url":"\/documentation\/stack\/stack\/expressiblebyarrayliteral-implementations"},"doc://Stack/documentation/Stack/Stack/makeIterator()":{"kind":"symbol","url":"\/documentation\/stack\/stack\/makeiterator()","type":"topic","abstract":[{"type":"text","text":"For conformance to Sequence protocol."},{"type":"text","text":" "},{"type":"text","text":"NOTE: This uses LinkedListâ€™s iterator, which iterates from head to tail of list."}],"title":"makeIterator()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"makeIterator","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"IndexingIterator","preciseIdentifier":"s:s16IndexingIteratorV"},{"text":"<","kind":"text"},{"text":"LinkedList","kind":"typeIdentifier","preciseIdentifier":"s:10LinkedListAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>"}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/makeIterator()","role":"symbol"},"doc://Stack/documentation/Stack/Stack/size":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"type":"topic","title":"size","identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/size","url":"\/documentation\/stack\/stack\/size","kind":"symbol","role":"symbol","abstract":[{"text":"Number of elements in Stack","type":"text"}]},"doc://Stack/documentation/Stack":{"role":"collection","title":"Stack","identifier":"doc:\/\/Stack\/documentation\/Stack","type":"topic","kind":"symbol","url":"\/documentation\/stack","abstract":[]},"doc://Stack/22IteratableListProtocol0A1PP":{"title":"IteratableListProtocol.IteratableP","identifier":"doc:\/\/Stack\/22IteratableListProtocol0A1PP","type":"unresolvable"},"doc://Stack/s8CopyableP":{"title":"Swift.Copyable","identifier":"doc:\/\/Stack\/s8CopyableP","type":"unresolvable"},"doc://Stack/documentation/Stack/Stack/push(_:)":{"title":"push(_:)","abstract":[{"text":"Push (enqueue) an element onto Stack.","type":"text"}],"url":"\/documentation\/stack\/stack\/push(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"push"},{"kind":"text","text":"(("},{"text":"T","kind":"typeIdentifier"},{"text":"))","kind":"text"}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/push(_:)","kind":"symbol","type":"topic","role":"symbol"},"doc://Stack/documentation/Stack/Stack/contains(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"kind":"text","text":"("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check if an element exists in the Stack."}],"kind":"symbol","url":"\/documentation\/stack\/stack\/contains(_:)","identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/contains(_:)","type":"topic","title":"contains(_:)","role":"symbol"},"doc://Stack/documentation/Stack/Stack/isEmpty":{"type":"topic","identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/isEmpty","abstract":[{"type":"text","text":"Check if the Stack is empty"}],"title":"isEmpty","role":"symbol","url":"\/documentation\/stack\/stack\/isempty","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isEmpty","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://Stack/s25ExpressibleByArrayLiteralP":{"identifier":"doc:\/\/Stack\/s25ExpressibleByArrayLiteralP","title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable"},"doc://Stack/ST":{"identifier":"doc:\/\/Stack\/ST","title":"Swift.Sequence","type":"unresolvable"}}}