{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stack"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Comparable","preciseIdentifier":"s:SL"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/stack\/stack"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Stack\/22IteratableListProtocol0A1PP","doc:\/\/Stack\/s23CustomStringConvertibleP","doc:\/\/Stack\/s25ExpressibleByArrayLiteralP","doc:\/\/Stack\/ST"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Stack\/documentation\/Stack\/Stack","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A Stack is a last-in-first-out (LIFO) data structure."},{"type":"text","text":" "},{"type":"text","text":"This is  implementation uses a linked list as the underlying container."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stack"}],"title":"Stack","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:5StackAAC","modules":[{"name":"Stack"}],"navigatorTitle":[{"kind":"identifier","text":"Stack"}]},"hierarchy":{"paths":[["doc:\/\/Stack\/documentation\/Stack"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Stack\/documentation\/Stack\/Stack\/init()"]},{"title":"Instance Properties","identifiers":["doc:\/\/Stack\/documentation\/Stack\/Stack\/isEmpty","doc:\/\/Stack\/documentation\/Stack\/Stack\/size"]},{"title":"Instance Methods","identifiers":["doc:\/\/Stack\/documentation\/Stack\/Stack\/contains(_:)","doc:\/\/Stack\/documentation\/Stack\/Stack\/makeIterator()","doc:\/\/Stack\/documentation\/Stack\/Stack\/peek()","doc:\/\/Stack\/documentation\/Stack\/Stack\/pop()","doc:\/\/Stack\/documentation\/Stack\/Stack\/push(_:)","doc:\/\/Stack\/documentation\/Stack\/Stack\/removeAll()"]},{"title":"Default Implementations","identifiers":["doc:\/\/Stack\/documentation\/Stack\/Stack\/CustomStringConvertible-Implementations","doc:\/\/Stack\/documentation\/Stack\/Stack\/ExpressibleByArrayLiteral-Implementations","doc:\/\/Stack\/documentation\/Stack\/Stack\/Sequence-Implementations"],"generated":true}],"references":{"doc://Stack/documentation/Stack/Stack/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/init()","kind":"symbol","type":"topic","url":"\/documentation\/stack\/stack\/init()"},"doc://Stack/documentation/Stack/Stack/pop()":{"role":"symbol","title":"pop()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pop"},{"kind":"text","text":"() -> ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"Pop (dequeue) an element from Stack and return it."}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/pop()","kind":"symbol","type":"topic","url":"\/documentation\/stack\/stack\/pop()"},"doc://Stack/documentation/Stack/Stack/peek()":{"role":"symbol","title":"peek()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"peek"},{"kind":"text","text":"() -> ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"Return the next element to be popped (without removing it from the Stack)."}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/peek()","kind":"symbol","type":"topic","url":"\/documentation\/stack\/stack\/peek()"},"doc://Stack/documentation/Stack":{"role":"collection","title":"Stack","abstract":[],"identifier":"doc:\/\/Stack\/documentation\/Stack","kind":"symbol","type":"topic","url":"\/documentation\/stack"},"doc://Stack/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/Stack\/s23CustomStringConvertibleP"},"doc://Stack/documentation/Stack/Stack/isEmpty":{"role":"symbol","title":"isEmpty","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check if the Stack is empty"}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/isEmpty","kind":"symbol","type":"topic","url":"\/documentation\/stack\/stack\/isempty"},"doc://Stack/documentation/Stack/Stack/ExpressibleByArrayLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByArrayLiteral Implementations","abstract":[],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/ExpressibleByArrayLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/stack\/stack\/expressiblebyarrayliteral-implementations"},"doc://Stack/documentation/Stack/Stack/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/Sequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/stack\/stack\/sequence-implementations"},"doc://Stack/documentation/Stack/Stack/CustomStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/CustomStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/stack\/stack\/customstringconvertible-implementations"},"doc://Stack/documentation/Stack/Stack/size":{"role":"symbol","title":"size","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Number of elements in Stack"}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/size","kind":"symbol","type":"topic","url":"\/documentation\/stack\/stack\/size"},"doc://Stack/documentation/Stack/Stack/makeIterator()":{"role":"symbol","title":"makeIterator()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"IndexingIterator","preciseIdentifier":"s:s16IndexingIteratorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"LinkedList","preciseIdentifier":"s:10LinkedListAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"For conformance to Sequence protocol."},{"type":"text","text":" "},{"type":"text","text":"NOTE: This uses LinkedListâ€™s iterator, which iterates from head to tail of list."}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/makeIterator()","kind":"symbol","type":"topic","url":"\/documentation\/stack\/stack\/makeiterator()"},"doc://Stack/22IteratableListProtocol0A1PP":{"type":"unresolvable","title":"IteratableListProtocol.IteratableP","identifier":"doc:\/\/Stack\/22IteratableListProtocol0A1PP"},"doc://Stack/ST":{"type":"unresolvable","title":"Swift.Sequence","identifier":"doc:\/\/Stack\/ST"},"doc://Stack/s25ExpressibleByArrayLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/Stack\/s25ExpressibleByArrayLiteralP"},"doc://Stack/documentation/Stack/Stack/removeAll()":{"role":"symbol","title":"removeAll()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAll"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Remove all elements of the Stack"}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/removeAll()","kind":"symbol","type":"topic","url":"\/documentation\/stack\/stack\/removeall()"},"doc://Stack/documentation/Stack/Stack/push(_:)":{"role":"symbol","title":"push(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"push"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"))"}],"abstract":[{"type":"text","text":"Push (enqueue) an element onto Stack."}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/push(_:)","kind":"symbol","type":"topic","url":"\/documentation\/stack\/stack\/push(_:)"},"doc://Stack/documentation/Stack/Stack/contains(_:)":{"role":"symbol","title":"contains(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check if an element exists in the Stack."}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack\/contains(_:)","kind":"symbol","type":"topic","url":"\/documentation\/stack\/stack\/contains(_:)"},"doc://Stack/documentation/Stack/Stack":{"role":"symbol","title":"Stack","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stack"}],"abstract":[{"type":"text","text":"A Stack is a last-in-first-out (LIFO) data structure."},{"type":"text","text":" "},{"type":"text","text":"This is  implementation uses a linked list as the underlying container."}],"identifier":"doc:\/\/Stack\/documentation\/Stack\/Stack","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Stack"}],"url":"\/documentation\/stack\/stack"}}}