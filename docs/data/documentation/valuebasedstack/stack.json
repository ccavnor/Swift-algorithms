{"hierarchy":{"paths":[["doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Enumeration","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Stack","kind":"identifier"}],"externalID":"s:15ValueBasedStack0C0O","modules":[{"name":"ValueBasedStack"}],"navigatorTitle":[{"text":"Stack","kind":"identifier"}],"title":"Stack","symbolKind":"enum"},"identifier":{"url":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"A Stack is a last-in-first-out (LIFO) data structure. This is a value-based implementation using an Enum as a container.","type":"text"},{"type":"text","text":" "},{"text":"This implementation is purely functional. All of its operations involve traversals over a list of nodes and run in O(n) time.","type":"text"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ValueBasedStack\/s8CopyableP","doc:\/\/ValueBasedStack\/s28CustomDebugStringConvertibleP"],"title":"Conforms To","type":"conformsTo"}],"kind":"symbol","topicSections":[{"anchor":"Enumeration-Cases","identifiers":["doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/empty","doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/list(_:_:)","doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/node(_:)"],"generated":true,"title":"Enumeration Cases"},{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/init()"]},{"title":"Instance Properties","anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/isEmpty","doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/size","doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/toArray"]},{"identifiers":["doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/contains(_:)","doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/peek()","doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/pop()","doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/push(_:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/CustomDebugStringConvertible-Implementations"],"anchor":"Default-Implementations","generated":true}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Stack","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Comparable","preciseIdentifier":"s:SL"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/valuebasedstack\/stack"]}],"references":{"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/empty":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"empty"}],"identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/empty","kind":"symbol","title":"Stack.empty","abstract":[],"type":"topic","url":"\/documentation\/valuebasedstack\/stack\/empty"},"doc://ValueBasedStack/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/ValueBasedStack\/s8CopyableP"},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/isEmpty":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/valuebasedstack\/stack\/isempty","abstract":[{"type":"text","text":"Check if stack has any elements."}],"identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/isEmpty","title":"isEmpty","kind":"symbol","role":"symbol"},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/list(_:_:)":{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"list","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Stack","preciseIdentifier":"s:15ValueBasedStack0C0O"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"url":"\/documentation\/valuebasedstack\/stack\/list(_:_:)","identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/list(_:_:)","kind":"symbol","role":"symbol","type":"topic","title":"Stack.list(_:_:)","abstract":[]},"doc://ValueBasedStack/documentation/ValueBasedStack":{"kind":"symbol","abstract":[],"role":"collection","url":"\/documentation\/valuebasedstack","title":"ValueBasedStack","type":"topic","identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack"},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/pop()":{"kind":"symbol","abstract":[{"type":"text","text":"Retrieve the last added element."},{"type":"text","text":" "},{"text":"Returns an optional tuple of two elements:","type":"text"}],"title":"pop()","url":"\/documentation\/valuebasedstack\/stack\/pop()","identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/pop()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"pop","kind":"identifier"},{"text":"() -> (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15ValueBasedStack0C0O","text":"Stack"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">)?"}],"type":"topic"},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/init()":{"role":"symbol","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/init()","title":"init()","url":"\/documentation\/valuebasedstack\/stack\/init()","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://ValueBasedStack/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/ValueBasedStack\/s28CustomDebugStringConvertibleP"},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/CustomDebugStringConvertible-Implementations":{"type":"topic","title":"CustomDebugStringConvertible Implementations","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/CustomDebugStringConvertible-Implementations","kind":"article","url":"\/documentation\/valuebasedstack\/stack\/customdebugstringconvertible-implementations"},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/push(_:)":{"kind":"symbol","title":"push(_:)","identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/push(_:)","abstract":[{"type":"text","text":"Add a new element on the stack."},{"text":" ","type":"text"},{"text":"Recursively calls itself to effectively reverse order of addition.","type":"text"}],"url":"\/documentation\/valuebasedstack\/stack\/push(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"push","kind":"identifier"},{"kind":"text","text":"("},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Stack","kind":"typeIdentifier","preciseIdentifier":"s:15ValueBasedStack0C0O"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"role":"symbol"},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/size":{"role":"symbol","url":"\/documentation\/valuebasedstack\/stack\/size","kind":"symbol","type":"topic","abstract":[{"text":"How many nodes are in this stack.","type":"text"}],"title":"size","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"size"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/size"},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/node(_:)":{"type":"topic","url":"\/documentation\/valuebasedstack\/stack\/node(_:)","kind":"symbol","title":"Stack.node(_:)","abstract":[],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/node(_:)","role":"symbol"},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack":{"abstract":[{"text":"A Stack is a last-in-first-out (LIFO) data structure. This is a value-based implementation using an Enum as a container.","type":"text"},{"type":"text","text":" "},{"text":"This implementation is purely functional. All of its operations involve traversals over a list of nodes and run in O(n) time.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack","title":"Stack","navigatorTitle":[{"text":"Stack","kind":"identifier"}],"url":"\/documentation\/valuebasedstack\/stack","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stack","kind":"identifier"}]},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/peek()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"peek","kind":"identifier"},{"text":"() -> (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"Get the value of the next element to be popped."}],"title":"peek()","identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/peek()","url":"\/documentation\/valuebasedstack\/stack\/peek()","role":"symbol","type":"topic"},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/toArray":{"url":"\/documentation\/valuebasedstack\/stack\/toarray","type":"topic","kind":"symbol","role":"symbol","title":"toArray","identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/toArray","abstract":[{"type":"text","text":"get an array of the stack elements, in their popped order."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"toArray","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"T"},{"text":"]","kind":"text"}]},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/contains(_:)":{"title":"contains(_:)","identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/contains(_:)","url":"\/documentation\/valuebasedstack\/stack\/contains(_:)","abstract":[{"type":"text","text":"Check if an element exists in the Queue. This will take O(n) time."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}}}}