{"identifier":{"url":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/debugDescription","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]}],"variants":[{"paths":["\/documentation\/valuebasedstack\/stack\/debugdescription"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"extendedModule":"ValueBasedStack","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"debugDescription","roleHeading":"Instance Property","modules":[{"name":"ValueBasedStack"}],"externalID":"s:15ValueBasedStack0C0O16debugDescriptionSSvp","symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack","doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack","doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/CustomDebugStringConvertible-Implementations"]]},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"CustomDebugStringConvertible.debugDescription"},{"text":".","type":"text"}],"references":{"doc://ValueBasedStack/documentation/ValueBasedStack/Stack":{"abstract":[{"text":"A Stack is a last-in-first-out (LIFO) data structure. This is a value-based implementation using an Enum as a container.","type":"text"},{"type":"text","text":" "},{"text":"This implementation is purely functional. All of its operations involve traversals over a list of nodes and run in O(n) time.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack","title":"Stack","navigatorTitle":[{"text":"Stack","kind":"identifier"}],"url":"\/documentation\/valuebasedstack\/stack","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stack","kind":"identifier"}]},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/CustomDebugStringConvertible-Implementations":{"type":"topic","title":"CustomDebugStringConvertible Implementations","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/CustomDebugStringConvertible-Implementations","kind":"article","url":"\/documentation\/valuebasedstack\/stack\/customdebugstringconvertible-implementations"},"doc://ValueBasedStack/documentation/ValueBasedStack":{"kind":"symbol","abstract":[],"role":"collection","url":"\/documentation\/valuebasedstack","title":"ValueBasedStack","type":"topic","identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack"},"doc://ValueBasedStack/documentation/ValueBasedStack/Stack/debugDescription":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","abstract":[],"title":"debugDescription","type":"topic","role":"symbol","identifier":"doc:\/\/ValueBasedStack\/documentation\/ValueBasedStack\/Stack\/debugDescription","url":"\/documentation\/valuebasedstack\/stack\/debugdescription","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]}}}}