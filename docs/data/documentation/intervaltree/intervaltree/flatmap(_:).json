{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"formula"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/intervaltree\/intervaltree\/flatmap(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/flatMap(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This is an alternative to using map on the IntervalTree, which uses the BinarySearchTree implementation of map - requiring"},{"type":"text","text":" "},{"type":"text","text":"the syntax:"},{"type":"text","text":" "},{"type":"text","text":"code<tree.map { try! Interval(start: $0.start * 2, end: $0.end * 2)}>"},{"type":"text","text":" "},{"type":"text","text":"versus doing the same with flatMap:"},{"type":"text","text":" "},{"type":"text","text":"code<tree.flatMap({ $0 + $0 })>"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]"}],"title":"flatMap(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:12IntervalTreeAAC7flatMapySay0B8Protocol0A0VyxGGxxXEF","modules":[{"name":"IntervalTree"}]},"hierarchy":{"paths":[["doc:\/\/IntervalTree\/documentation\/IntervalTree","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree"]]},"references":{"doc://IntervalTree/documentation/IntervalTree":{"role":"collection","title":"IntervalTree","abstract":[],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/flatMap(_:)":{"role":"symbol","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]"}],"abstract":[{"type":"text","text":"This is an alternative to using map on the IntervalTree, which uses the BinarySearchTree implementation of map - requiring"},{"type":"text","text":" "},{"type":"text","text":"the syntax:"},{"type":"text","text":" "},{"type":"text","text":"code<tree.map { try! Interval(start: $0.start * 2, end: $0.end * 2)}>"},{"type":"text","text":" "},{"type":"text","text":"versus doing the same with flatMap:"},{"type":"text","text":" "},{"type":"text","text":"code<tree.flatMap({ $0 + $0 })>"}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/flatMap(_:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/flatmap(_:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree":{"role":"symbol","title":"IntervalTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntervalTree"}],"abstract":[{"type":"text","text":"IntervalTree is a AVLTree (therefore a BST) that uses Interval objects as nodes. IntervalTree is constrained to Numeric types,"},{"type":"text","text":" "},{"type":"text","text":"as operations such as length make little sense outside of numerical values."}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IntervalTree"}],"url":"\/documentation\/intervaltree\/intervaltree"}}}