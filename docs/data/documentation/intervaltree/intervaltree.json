{"metadata":{"navigatorTitle":[{"text":"IntervalTree","kind":"identifier"}],"externalID":"s:12IntervalTreeAAC","roleHeading":"Class","role":"symbol","symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IntervalTree","kind":"identifier"}],"title":"IntervalTree","modules":[{"name":"IntervalTree"}]},"abstract":[{"text":"IntervalTree is a AVLTree (therefore a BST) that uses Interval objects as nodes. IntervalTree is constrained to Numeric types,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as operations such as length make little sense outside of numerical values."}],"sections":[],"identifier":{"url":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/IntervalTree\/documentation\/IntervalTree"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/intervaltree\/intervaltree"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IntervalTree","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:12TreeProtocol08IntervalA6ValuePP","text":"IntervalTreeValueP","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"relationshipsSections":[{"title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/IntervalTree\/7AVLTreeAAC"],"type":"inheritsFrom"},{"identifiers":["doc:\/\/IntervalTree\/s23CustomStringConvertibleP","doc:\/\/IntervalTree\/12TreeProtocol0A1PP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"topicSections":[{"identifiers":["doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(array:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(node:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(value:)"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/contains(value:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/flatMap(_:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/insert(node:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/overlaps(interval:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/predecessor(value:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/search(value:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/successor(value:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/within(interval:)"]},{"generated":true,"anchor":"Subscripts","identifiers":["doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/subscript(_:)"],"title":"Subscripts"}],"kind":"symbol","references":{"doc://IntervalTree/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/IntervalTree\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/search(value:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"search","kind":"identifier"},{"kind":"text","text":"("},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"IntervalTreeNode","kind":"typeIdentifier","preciseIdentifier":"s:12IntervalTree0aB4NodeC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">?","kind":"text"}],"url":"\/documentation\/intervaltree\/intervaltree\/search(value:)","identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/search(value:)","type":"topic","kind":"symbol","title":"search(value:)","role":"symbol","abstract":[{"text":"Finds the “highest” (in tree) node with the specified value.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Performance: runs in O(h) time, where h is the height of the tree."}]},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/init(array:)":{"abstract":[],"fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"array"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:12TreeProtocol8IntervalV","kind":"typeIdentifier","text":"Interval"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">])","kind":"text"}],"role":"symbol","kind":"symbol","title":"init(array:)","type":"topic","identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(array:)","url":"\/documentation\/intervaltree\/intervaltree\/init(array:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/flatMap(_:)":{"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/flatMap(_:)","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"text":"((","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"preciseIdentifier":"s:12TreeProtocol8IntervalV","kind":"typeIdentifier","text":"Interval"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">]","kind":"text"}],"abstract":[{"type":"text","text":"This is an alternative to using map on the IntervalTree, which uses the BinarySearchTree implementation of map - requiring"},{"text":" ","type":"text"},{"text":"the syntax:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"code<tree.map { try! Interval(start: $0.start * 2, end: $0.end * 2)}>"},{"text":" ","type":"text"},{"text":"versus doing the same with flatMap:","type":"text"},{"type":"text","text":" "},{"text":"code<tree.flatMap({ $0 + $0 })>","type":"text"}],"url":"\/documentation\/intervaltree\/intervaltree\/flatmap(_:)","title":"flatMap(_:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/init(node:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(node:)","title":"init(node:)","abstract":[],"kind":"symbol","url":"\/documentation\/intervaltree\/intervaltree\/init(node:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"IntervalTreeNode","kind":"typeIdentifier","preciseIdentifier":"s:12IntervalTree0aB4NodeC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">)","kind":"text"}]},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/successor(value:)":{"url":"\/documentation\/intervaltree\/intervaltree\/successor(value:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"successor"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Interval","kind":"typeIdentifier","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">?","kind":"text"}],"abstract":[{"type":"text","text":"Finds the node whose value succeeds our value in sorted order."}],"type":"topic","title":"successor(value:)","identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/successor(value:)","role":"symbol"},"doc://IntervalTree/7AVLTreeAAC":{"title":"AVLTree.AVLTree","type":"unresolvable","identifier":"doc:\/\/IntervalTree\/7AVLTreeAAC"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/predecessor(value:)":{"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/predecessor(value:)","role":"symbol","kind":"symbol","url":"\/documentation\/intervaltree\/intervaltree\/predecessor(value:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"predecessor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12TreeProtocol8IntervalV","text":"Interval"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">?","kind":"text"}],"title":"predecessor(value:)","abstract":[{"type":"text","text":"Finds the node whose value preceedes our value in sorted order."}],"type":"topic"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/insert(node:)":{"kind":"symbol","title":"insert(node:)","identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/insert(node:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"insert","kind":"identifier"},{"kind":"text","text":"("},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12IntervalTree0aB4NodeC","text":"IntervalTreeNode"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"IntervalTreeNode","preciseIdentifier":"s:12IntervalTree0aB4NodeC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/intervaltree\/intervaltree\/insert(node:)","abstract":[{"type":"text","text":"Inserts a new element into the tree. Duplicate values are ignored, but this incurs a lookup penalty of O(h)."},{"type":"text","text":" "},{"text":"Performance: runs in O(h) time, where h is the height of the tree, plus O(log(n)) time for balancing.","type":"text"}],"role":"symbol","type":"topic"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/overlaps(interval:)":{"title":"overlaps(interval:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"overlaps","kind":"identifier"},{"text":"(","kind":"text"},{"text":"interval","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Interval","kind":"typeIdentifier","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> ["},{"preciseIdentifier":"s:12TreeProtocol8IntervalV","text":"Interval","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">]"}],"role":"symbol","identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/overlaps(interval:)","abstract":[{"text":"Returns set of intervals that overlap with the given reference interval","type":"text"}],"url":"\/documentation\/intervaltree\/intervaltree\/overlaps(interval:)","kind":"symbol"},"doc://IntervalTree/12TreeProtocol0A1PP":{"title":"TreeProtocol.TreeP","type":"unresolvable","identifier":"doc:\/\/IntervalTree\/12TreeProtocol0A1PP"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/within(interval:)":{"role":"symbol","abstract":[{"text":"Returns set of intervals that the given interval is within","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"within"},{"kind":"text","text":"("},{"kind":"externalParam","text":"interval"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12TreeProtocol8IntervalV","text":"Interval","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> [","kind":"text"},{"text":"Interval","kind":"typeIdentifier","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">]"}],"kind":"symbol","url":"\/documentation\/intervaltree\/intervaltree\/within(interval:)","identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/within(interval:)","title":"within(interval:)"},"doc://IntervalTree/documentation/IntervalTree":{"kind":"symbol","role":"collection","identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree","abstract":[],"url":"\/documentation\/intervaltree","title":"IntervalTree","type":"topic"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"IntervalTree","kind":"identifier"}],"url":"\/documentation\/intervaltree\/intervaltree","identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree","type":"topic","kind":"symbol","title":"IntervalTree","navigatorTitle":[{"text":"IntervalTree","kind":"identifier"}],"role":"symbol","abstract":[{"text":"IntervalTree is a AVLTree (therefore a BST) that uses Interval objects as nodes. IntervalTree is constrained to Numeric types,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"as operations such as length make little sense outside of numerical values."}]},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/contains(value:)":{"kind":"symbol","title":"contains(value:)","identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/contains(value:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contains"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"value"},{"text":": ","kind":"text"},{"text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/intervaltree\/intervaltree\/contains(value:)","abstract":[],"role":"symbol","type":"topic"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/subscript(_:)":{"role":"symbol","identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/subscript(_:)","abstract":[{"type":"text","text":"Custom collection accessor for [] notation"}],"kind":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:12TreeProtocol8IntervalV","kind":"typeIdentifier","text":"Interval"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:12IntervalTree0aB4NodeC","text":"IntervalTreeNode","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">?"}],"type":"topic","title":"subscript(_:)","url":"\/documentation\/intervaltree\/intervaltree\/subscript(_:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/init(value:)":{"role":"symbol","title":"init(value:)","url":"\/documentation\/intervaltree\/intervaltree\/init(value:)","abstract":[],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(value:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12TreeProtocol8IntervalV","text":"Interval"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">)","kind":"text"}],"type":"topic","kind":"symbol"}}}