{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntervalTree"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Comparable","preciseIdentifier":"s:SL"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Numeric","preciseIdentifier":"s:Sj"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/intervaltree\/intervaltree"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/IntervalTree\/7AVLTreeAAC"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/IntervalTree\/s23CustomStringConvertibleP","doc:\/\/IntervalTree\/12TreeProtocolAAP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"IntervalTree is a AVLTree (therefore a BST) that uses Interval objects as nodes. IntervalTree is constrained to Numeric types,"},{"type":"text","text":" "},{"type":"text","text":"as operations such as length make little sense outside of numerical values."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntervalTree"}],"title":"IntervalTree","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:12IntervalTreeAAC","modules":[{"name":"IntervalTree"}],"navigatorTitle":[{"kind":"identifier","text":"IntervalTree"}]},"hierarchy":{"paths":[["doc:\/\/IntervalTree\/documentation\/IntervalTree"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(array:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(intervalNode:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/draw()","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/flatMap(_:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/insert(value:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/search(value:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/iNode"]}],"references":{"doc://IntervalTree/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/IntervalTree\/s23CustomStringConvertibleP"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/flatMap(_:)":{"role":"symbol","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12IntervalTree0A0C"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]"}],"abstract":[{"type":"text","text":"This is an alternative to using map on the IntervalTree, which uses the BinarySearchTree implementation of map - requiring"},{"type":"text","text":" "},{"type":"text","text":"the syntax:"},{"type":"text","text":" "},{"type":"text","text":"code<tree.map { try! Interval(start: $0.start * 2, end: $0.end * 2)}>"},{"type":"text","text":" "},{"type":"text","text":"versus doing the same with flatMap:"},{"type":"text","text":" "},{"type":"text","text":"code<tree.flatMap({ 2 * $0 })>"}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/flatMap(_:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/flatmap(_:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/draw()":{"role":"symbol","title":"draw()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"draw"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/draw()","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/draw()"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/insert(value:)":{"role":"symbol","title":"insert(value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12IntervalTree0A0C"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Insertion is based on start value of interval"}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/insert(value:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/insert(value:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/init(intervalNode:)":{"role":"symbol","title":"init(intervalNode:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"intervalNode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IntervalTree","preciseIdentifier":"s:12IntervalTreeAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"iNode","preciseIdentifier":"s:12IntervalTreeAAC5iNodea"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(intervalNode:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/init(intervalnode:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/init(array:)":{"role":"symbol","title":"init(array:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"array"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12IntervalTree0A0C"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">])"}],"abstract":[],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(array:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/init(array:)"},"doc://IntervalTree/7AVLTreeAAC":{"type":"unresolvable","title":"AVLTree.AVLTree","identifier":"doc:\/\/IntervalTree\/7AVLTreeAAC"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/iNode":{"role":"symbol","title":"IntervalTree.iNode","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"iNode"}],"abstract":[],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/iNode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"iNode"}],"url":"\/documentation\/intervaltree\/intervaltree\/inode"},"doc://IntervalTree/documentation/IntervalTree":{"role":"collection","title":"IntervalTree","abstract":[],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree":{"role":"symbol","title":"IntervalTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntervalTree"}],"abstract":[{"type":"text","text":"IntervalTree is a AVLTree (therefore a BST) that uses Interval objects as nodes. IntervalTree is constrained to Numeric types,"},{"type":"text","text":" "},{"type":"text","text":"as operations such as length make little sense outside of numerical values."}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IntervalTree"}],"url":"\/documentation\/intervaltree\/intervaltree"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/search(value:)":{"role":"symbol","title":"search(value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"search"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12IntervalTree0A0C"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"BinarySearchTreeNode","preciseIdentifier":"s:16BinarySearchTree0abC4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12IntervalTree0A0C"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>?"}],"abstract":[{"type":"text","text":"Since insertion is based on start value of the interval, so too will search look at start value"}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/search(value:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/search(value:)"},"doc://IntervalTree/12TreeProtocolAAP":{"type":"unresolvable","title":"TreeProtocol.TreeProtocol","identifier":"doc:\/\/IntervalTree\/12TreeProtocolAAP"}}}