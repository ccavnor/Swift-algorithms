{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntervalTree"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"IntervalTreeValueP","preciseIdentifier":"s:12TreeProtocol08IntervalA6ValuePP"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/intervaltree\/intervaltree"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/IntervalTree\/7AVLTreeAAC"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/IntervalTree\/s23CustomStringConvertibleP","doc:\/\/IntervalTree\/12TreeProtocol0A1PP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"IntervalTree is a AVLTree (therefore a BST) that uses Interval objects as nodes. IntervalTree is constrained to Numeric types,"},{"type":"text","text":" "},{"type":"text","text":"as operations such as length make little sense outside of numerical values."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntervalTree"}],"title":"IntervalTree","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:12IntervalTreeAAC","modules":[{"name":"IntervalTree"}],"navigatorTitle":[{"kind":"identifier","text":"IntervalTree"}]},"hierarchy":{"paths":[["doc:\/\/IntervalTree\/documentation\/IntervalTree"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(array:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(node:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(value:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/contains(value:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/flatMap(_:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/insert(node:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/overlaps(interval:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/predecessor(value:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/search(value:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/successor(value:)","doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/within(interval:)"]},{"title":"Subscripts","identifiers":["doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/subscript(_:)"]}],"references":{"doc://IntervalTree/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/IntervalTree\/s23CustomStringConvertibleP"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/contains(value:)":{"role":"symbol","title":"contains(value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/contains(value:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/contains(value:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/subscript(_:)":{"role":"symbol","title":"subscript(_:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"IntervalTreeNode","preciseIdentifier":"s:12IntervalTree0aB4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">?"}],"abstract":[{"type":"text","text":"Custom collection accessor for [] notation"}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/subscript(_:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/subscript(_:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/within(interval:)":{"role":"symbol","title":"within(interval:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"within"},{"kind":"text","text":"("},{"kind":"externalParam","text":"interval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> ["},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]"}],"abstract":[{"type":"text","text":"Returns set of intervals that the given interval is within"}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/within(interval:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/within(interval:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree":{"role":"symbol","title":"IntervalTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntervalTree"}],"abstract":[{"type":"text","text":"IntervalTree is a AVLTree (therefore a BST) that uses Interval objects as nodes. IntervalTree is constrained to Numeric types,"},{"type":"text","text":" "},{"type":"text","text":"as operations such as length make little sense outside of numerical values."}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IntervalTree"}],"url":"\/documentation\/intervaltree\/intervaltree"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/flatMap(_:)":{"role":"symbol","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]"}],"abstract":[{"type":"text","text":"This is an alternative to using map on the IntervalTree, which uses the BinarySearchTree implementation of map - requiring"},{"type":"text","text":" "},{"type":"text","text":"the syntax:"},{"type":"text","text":" "},{"type":"text","text":"code<tree.map { try! Interval(start: $0.start * 2, end: $0.end * 2)}>"},{"type":"text","text":" "},{"type":"text","text":"versus doing the same with flatMap:"},{"type":"text","text":" "},{"type":"text","text":"code<tree.flatMap({ $0 + $0 })>"}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/flatMap(_:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/flatmap(_:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/init(value:)":{"role":"symbol","title":"init(value:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(value:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/init(value:)"},"doc://IntervalTree/documentation/IntervalTree":{"role":"collection","title":"IntervalTree","abstract":[],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/overlaps(interval:)":{"role":"symbol","title":"overlaps(interval:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"overlaps"},{"kind":"text","text":"("},{"kind":"externalParam","text":"interval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> ["},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]"}],"abstract":[{"type":"text","text":"Returns set of intervals that overlap with the given reference interval"}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/overlaps(interval:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/overlaps(interval:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/init(array:)":{"role":"symbol","title":"init(array:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"array"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">])"}],"abstract":[],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(array:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/init(array:)"},"doc://IntervalTree/7AVLTreeAAC":{"type":"unresolvable","title":"AVLTree.AVLTree","identifier":"doc:\/\/IntervalTree\/7AVLTreeAAC"},"doc://IntervalTree/12TreeProtocol0A1PP":{"type":"unresolvable","title":"TreeProtocol.TreeP","identifier":"doc:\/\/IntervalTree\/12TreeProtocol0A1PP"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/insert(node:)":{"role":"symbol","title":"insert(node:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IntervalTreeNode","preciseIdentifier":"s:12IntervalTree0aB4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"IntervalTreeNode","preciseIdentifier":"s:12IntervalTree0aB4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Inserts a new element into the tree. Duplicate values are ignored, but this incurs a lookup penalty of O(h)."},{"type":"text","text":" "},{"type":"text","text":"Performance: runs in O(h) time, where h is the height of the tree, plus O(log(n)) time for balancing."}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/insert(node:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/insert(node:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/predecessor(value:)":{"role":"symbol","title":"predecessor(value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"predecessor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">?"}],"abstract":[{"type":"text","text":"Finds the node whose value preceedes our value in sorted order."}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/predecessor(value:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/predecessor(value:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/search(value:)":{"role":"symbol","title":"search(value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"search"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"IntervalTreeNode","preciseIdentifier":"s:12IntervalTree0aB4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">?"}],"abstract":[{"type":"text","text":"Finds the “highest” (in tree) node with the specified value."},{"type":"text","text":" "},{"type":"text","text":"Performance: runs in O(h) time, where h is the height of the tree."}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/search(value:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/search(value:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/successor(value:)":{"role":"symbol","title":"successor(value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"successor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Interval","preciseIdentifier":"s:12TreeProtocol8IntervalV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">?"}],"abstract":[{"type":"text","text":"Finds the node whose value succeeds our value in sorted order."}],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/successor(value:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/successor(value:)"},"doc://IntervalTree/documentation/IntervalTree/IntervalTree/init(node:)":{"role":"symbol","title":"init(node:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IntervalTreeNode","preciseIdentifier":"s:12IntervalTree0aB4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[],"identifier":"doc:\/\/IntervalTree\/documentation\/IntervalTree\/IntervalTree\/init(node:)","kind":"symbol","type":"topic","url":"\/documentation\/intervaltree\/intervaltree\/init(node:)"}}}