{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/binarysearchtree\/binarysearchtree\/subscript(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree\/subscript(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Custom collection accessor for [] notation."},{"type":"text","text":" "},{"type":"text","text":"To find out if a value is present in tree, use tree[value] - value will be returned if it exists."},{"type":"text","text":" "},{"type":"text","text":"To replace an existing value, use tree[existing_value] = new_value."},{"type":"text","text":" "},{"type":"text","text":"To remove a key from the tree, use tree[value] = nil."},{"type":"text","text":" "},{"type":"text","text":"To add a new value to the tree, assign the value to itself: tree[value] = value."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"title":"subscript(_:)","roleHeading":"Instance Subscript","role":"symbol","symbolKind":"subscript","externalID":"s:16BinarySearchTreeAACyxSgxcip","modules":[{"name":"BinarySearchTree"}]},"hierarchy":{"paths":[["doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree","doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree"]]},"references":{"doc://BinarySearchTree/documentation/BinarySearchTree":{"role":"collection","title":"BinarySearchTree","abstract":[],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree","kind":"symbol","type":"topic","url":"\/documentation\/binarysearchtree"},"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTree":{"role":"symbol","title":"BinarySearchTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinarySearchTree"}],"abstract":[{"type":"text","text":"A binary search tree (BST). Each node stores a value and up to two children."},{"type":"text","text":" "},{"type":"text","text":"As BSTs are utilized as classifications (or keys in a dictionary), they are not Bag data structures - meanding"},{"type":"text","text":" "},{"type":"text","text":"that duplicate values are not allowed."},{"type":"text","text":" "},{"type":"text","text":"This tree does not automatically balance itself. To make sure it is balanced, you should insert new values in"},{"type":"text","text":" "},{"type":"text","text":"randomized order, not in sorted order."}],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BinarySearchTree"}],"url":"\/documentation\/binarysearchtree\/binarysearchtree"},"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTree/subscript(_:)":{"role":"symbol","title":"subscript(_:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Custom collection accessor for [] notation."},{"type":"text","text":" "},{"type":"text","text":"To find out if a value is present in tree, use tree[value] - value will be returned if it exists."},{"type":"text","text":" "},{"type":"text","text":"To replace an existing value, use tree[existing_value] = new_value."},{"type":"text","text":" "},{"type":"text","text":"To remove a key from the tree, use tree[value] = nil."},{"type":"text","text":" "},{"type":"text","text":"To add a new value to the tree, assign the value to itself: tree[value] = value."}],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree\/subscript(_:)","kind":"symbol","type":"topic","url":"\/documentation\/binarysearchtree\/binarysearchtree\/subscript(_:)"}}}