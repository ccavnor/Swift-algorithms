{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree","doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree"]]},"abstract":[{"type":"text","text":"Calculates the height of a given node in tree. There is a dynamic cost to using this function"},{"type":"text","text":" "},{"text":"over the height property of nodes, but the latter are only guaranteed to be accurate after balancing in AVL trees.","type":"text"}],"kind":"symbol","metadata":{"role":"symbol","title":"height(node:)","modules":[{"name":"BinarySearchTree"}],"symbolKind":"method","externalID":"s:16BinarySearchTreeAAC6height4nodeSiAA0abC4NodeCyxGSg_tF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"height"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16BinarySearchTree0abC4NodeC","text":"BinarySearchTreeNode","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"roleHeading":"Instance Method"},"identifier":{"url":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree\/height(node:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"height","kind":"identifier"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTreeNode","text":"BinarySearchTreeNode","preciseIdentifier":"s:16BinarySearchTree0abC4NodeC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">?) -> "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/binarysearchtree\/binarysearchtree\/height(node:)"]}],"references":{"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTree/height(node:)":{"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree\/height(node:)","role":"symbol","kind":"symbol","title":"height(node:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"height"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16BinarySearchTree0abC4NodeC","kind":"typeIdentifier","text":"BinarySearchTreeNode"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">?) -> "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","abstract":[{"type":"text","text":"Calculates the height of a given node in tree. There is a dynamic cost to using this function"},{"text":" ","type":"text"},{"type":"text","text":"over the height property of nodes, but the latter are only guaranteed to be accurate after balancing in AVL trees."}],"url":"\/documentation\/binarysearchtree\/binarysearchtree\/height(node:)"},"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTreeNode":{"abstract":[{"type":"text","text":"A Binary Search Tree Node"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"BinarySearchTreeNode","kind":"identifier"}],"type":"topic","title":"BinarySearchTreeNode","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"BinarySearchTreeNode","kind":"identifier"}],"url":"\/documentation\/binarysearchtree\/binarysearchtreenode","identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTreeNode"},"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTree":{"title":"BinarySearchTree","navigatorTitle":[{"text":"BinarySearchTree","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A binary search tree (BST). Each node stores a value and up to two children."},{"type":"text","text":" "},{"type":"text","text":"As BSTs are utilized as classifications (or keys in a dictionary), they are not Bag data structures - meanding"},{"text":" ","type":"text"},{"text":"that duplicate values are not allowed.","type":"text"},{"text":" ","type":"text"},{"text":"This tree does not automatically balance itself. To make sure it is balanced, you should insert new values in","type":"text"},{"type":"text","text":" "},{"text":"randomized order, not in sorted order.","type":"text"}],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree","kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BinarySearchTree"}],"url":"\/documentation\/binarysearchtree\/binarysearchtree"},"doc://BinarySearchTree/documentation/BinarySearchTree":{"kind":"symbol","title":"BinarySearchTree","url":"\/documentation\/binarysearchtree","identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree","role":"collection","type":"topic","abstract":[]}}}