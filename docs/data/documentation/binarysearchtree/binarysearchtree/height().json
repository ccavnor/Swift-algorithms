{"metadata":{"modules":[{"name":"BinarySearchTree"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"height","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","title":"height()","externalID":"s:16BinarySearchTreeAAC6heightSiyF"},"abstract":[{"text":"Calculates the height of the tree, i.e. the distance from root to the lowest leaf. A tree of one node has height == 1.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Since this looks at all children of tree, performance is O(n)."}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree","doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"height","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/binarysearchtree\/binarysearchtree\/height()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree\/height()"},"references":{"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTree":{"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree","kind":"symbol","title":"BinarySearchTree","type":"topic","abstract":[{"type":"text","text":"A binary search tree (BST). Each node stores a value and up to two children."},{"type":"text","text":" "},{"type":"text","text":"As BSTs are utilized as classifications (or keys in a dictionary), they are not Bag data structures - meanding"},{"type":"text","text":" "},{"type":"text","text":"that duplicate values are not allowed."},{"type":"text","text":" "},{"text":"This tree does not automatically balance itself. To make sure it is balanced, you should insert new values in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"randomized order, not in sorted order."}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BinarySearchTree"}],"navigatorTitle":[{"kind":"identifier","text":"BinarySearchTree"}],"url":"\/documentation\/binarysearchtree\/binarysearchtree"},"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTree/height()":{"url":"\/documentation\/binarysearchtree\/binarysearchtree\/height()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"height","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree\/height()","title":"height()","type":"topic","abstract":[{"text":"Calculates the height of the tree, i.e. the distance from root to the lowest leaf. A tree of one node has height == 1.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Since this looks at all children of tree, performance is O(n)."}],"kind":"symbol","role":"symbol"},"doc://BinarySearchTree/documentation/BinarySearchTree":{"kind":"symbol","title":"BinarySearchTree","url":"\/documentation\/binarysearchtree","identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree","role":"collection","type":"topic","abstract":[]}}}