{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTreeNode","preciseIdentifier":"s:16BinarySearchTree0abC4NodeC","text":"BinarySearchTreeNode"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTreeNode","preciseIdentifier":"s:16BinarySearchTree0abC4NodeC","text":"BinarySearchTreeNode"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/binarysearchtree\/binarysearchtree\/insert(node:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree\/insert(node:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inserts a new element into the tree. You should randomly insert elements at the root, to make to sure this remains a valid"},{"type":"text","text":" "},{"type":"text","text":"binary tree! Duplicate values are ignored, but this incurs a lookup penalty."},{"type":"text","text":" "},{"type":"text","text":"Performance: runs in O(h) time, where h is the height of the tree."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BinarySearchTreeNode","preciseIdentifier":"s:16BinarySearchTree0abC4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"BinarySearchTreeNode","preciseIdentifier":"s:16BinarySearchTree0abC4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"insert(node:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:16BinarySearchTreeAAC6insert4nodeAA0abC4NodeCyxGAG_tKF","modules":[{"name":"BinarySearchTree"}]},"hierarchy":{"paths":[["doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree","doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree"]]},"references":{"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTree/insert(node:)":{"role":"symbol","title":"insert(node:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BinarySearchTreeNode","preciseIdentifier":"s:16BinarySearchTree0abC4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"BinarySearchTreeNode","preciseIdentifier":"s:16BinarySearchTree0abC4NodeC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Inserts a new element into the tree. You should randomly insert elements at the root, to make to sure this remains a valid"},{"type":"text","text":" "},{"type":"text","text":"binary tree! Duplicate values are ignored, but this incurs a lookup penalty."},{"type":"text","text":" "},{"type":"text","text":"Performance: runs in O(h) time, where h is the height of the tree."}],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree\/insert(node:)","kind":"symbol","type":"topic","url":"\/documentation\/binarysearchtree\/binarysearchtree\/insert(node:)"},"doc://BinarySearchTree/documentation/BinarySearchTree":{"role":"collection","title":"BinarySearchTree","abstract":[],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree","kind":"symbol","type":"topic","url":"\/documentation\/binarysearchtree"},"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTree":{"role":"symbol","title":"BinarySearchTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinarySearchTree"}],"abstract":[{"type":"text","text":"A binary search tree (BST). Each node stores a value and up to two children."},{"type":"text","text":" "},{"type":"text","text":"As BSTs are utilized as classifications (or keys in a dictionary), they are not Bag data structures - meanding"},{"type":"text","text":" "},{"type":"text","text":"that duplicate values are not allowed."},{"type":"text","text":" "},{"type":"text","text":"This tree does not automatically balance itself. To make sure it is balanced, you should insert new values in"},{"type":"text","text":" "},{"type":"text","text":"randomized order, not in sorted order."}],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BinarySearchTree"}],"url":"\/documentation\/binarysearchtree\/binarysearchtree"},"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTreeNode":{"role":"symbol","title":"BinarySearchTreeNode","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinarySearchTreeNode"}],"abstract":[{"type":"text","text":"A Binary Search Tree Node"}],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTreeNode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BinarySearchTreeNode"}],"url":"\/documentation\/binarysearchtree\/binarysearchtreenode"}}}