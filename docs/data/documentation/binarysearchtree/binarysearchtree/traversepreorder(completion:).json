{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"traversePreOrder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"codeListing","syntax":null,"code":["var preOrder = [Int]()","tree.traversePreOrder { preOrder.append($0) }"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/binarysearchtree\/binarysearchtree\/traversepreorder(completion:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree\/traversePreOrder(completion:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Pre-order traversal using given function as accumulator for node values."},{"type":"text","text":" "},{"type":"text","text":"use like this:"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"traversePreOrder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"traversePreOrder(completion:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:16BinarySearchTreeAAC16traversePreOrder10completionyyxXE_tF","modules":[{"name":"BinarySearchTree"}]},"hierarchy":{"paths":[["doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree","doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree"]]},"references":{"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTree":{"role":"symbol","title":"BinarySearchTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinarySearchTree"}],"abstract":[{"type":"text","text":"A binary search tree. Each node stores a value and up to two children. This tree ignores any inserted duplicate elements."},{"type":"text","text":" "},{"type":"text","text":"This tree does not automatically balance itself. To make sure it is balanced, you should insert new values in"},{"type":"text","text":" "},{"type":"text","text":"randomized order, not in sorted order."}],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BinarySearchTree"}],"url":"\/documentation\/binarysearchtree\/binarysearchtree"},"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTree/traversePreOrder(completion:)":{"role":"symbol","title":"traversePreOrder(completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"traversePreOrder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Pre-order traversal using given function as accumulator for node values."},{"type":"text","text":" "},{"type":"text","text":"use like this:"}],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree\/traversePreOrder(completion:)","kind":"symbol","type":"topic","url":"\/documentation\/binarysearchtree\/binarysearchtree\/traversepreorder(completion:)"},"doc://BinarySearchTree/documentation/BinarySearchTree":{"role":"collection","title":"BinarySearchTree","abstract":[],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree","kind":"symbol","type":"topic","url":"\/documentation\/binarysearchtree"}}}