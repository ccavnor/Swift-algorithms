{"hierarchy":{"paths":[["doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree","doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree"]]},"metadata":{"modules":[{"name":"BinarySearchTree"}],"roleHeading":"Instance Method","externalID":"s:16BinarySearchTreeAAC16traversePreOrder10completionyyxXE_tF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"traversePreOrder","kind":"identifier"},{"text":"(","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"traversePreOrder(completion:)","symbolKind":"method"},"sections":[],"identifier":{"url":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree\/traversePreOrder(completion:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/binarysearchtree\/binarysearchtree\/traversepreorder(completion:)"]}],"abstract":[{"type":"text","text":"Pre-order traversal using given function as accumulator for node values."},{"text":" ","type":"text"},{"type":"text","text":"use like this:"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"traversePreOrder","kind":"identifier"},{"text":"(","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"codeListing","syntax":null,"code":["var preOrder = [Int]()","tree.traversePreOrder { preOrder.append($0) }"]}]}],"references":{"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTree/traversePreOrder(completion:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"traversePreOrder","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")","kind":"text"}],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree\/traversePreOrder(completion:)","role":"symbol","title":"traversePreOrder(completion:)","kind":"symbol","url":"\/documentation\/binarysearchtree\/binarysearchtree\/traversepreorder(completion:)","abstract":[{"text":"Pre-order traversal using given function as accumulator for node values.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"use like this:"}],"type":"topic"},"doc://BinarySearchTree/documentation/BinarySearchTree":{"kind":"symbol","title":"BinarySearchTree","url":"\/documentation\/binarysearchtree","identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree","role":"collection","type":"topic","abstract":[]},"doc://BinarySearchTree/documentation/BinarySearchTree/BinarySearchTree":{"title":"BinarySearchTree","navigatorTitle":[{"text":"BinarySearchTree","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A binary search tree (BST). Each node stores a value and up to two children."},{"type":"text","text":" "},{"type":"text","text":"As BSTs are utilized as classifications (or keys in a dictionary), they are not Bag data structures - meanding"},{"text":" ","type":"text"},{"text":"that duplicate values are not allowed.","type":"text"},{"text":" ","type":"text"},{"text":"This tree does not automatically balance itself. To make sure it is balanced, you should insert new values in","type":"text"},{"type":"text","text":" "},{"text":"randomized order, not in sorted order.","type":"text"}],"identifier":"doc:\/\/BinarySearchTree\/documentation\/BinarySearchTree\/BinarySearchTree","kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BinarySearchTree"}],"url":"\/documentation\/binarysearchtree\/binarysearchtree"}}}