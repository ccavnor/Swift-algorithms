{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pushPop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"element"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"element","content":[{"type":"paragraph","inlineContent":[{"text":"The value to push","type":"text"}]}]}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"O(log n) if heapify is required, else O(1)","type":"text"}]}],"type":"aside","style":"note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/heap\/heap\/pushpop(_:)"]}],"kind":"symbol","abstract":[{"text":"Insert at the root and then extract (after heapify if required) in same operation.","type":"text"},{"text":" ","type":"text"},{"text":"This is more effecient than a consecutive push, then pop, which would both","type":"text"},{"type":"text","text":" "},{"type":"text","text":"require an O(n) operation (a bubble-up then a bubble-down)."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Heap\/documentation\/Heap\/Heap\/pushPop(_:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/Heap\/documentation\/Heap","doc:\/\/Heap\/documentation\/Heap\/Heap"]]},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","title":"pushPop(_:)","externalID":"s:4HeapAAC7pushPopyxSgxF","modules":[{"name":"Heap"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pushPop"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"role":"symbol"},"references":{"doc://Heap/documentation/Heap/Heap/pushPop(_:)":{"url":"\/documentation\/heap\/heap\/pushpop(_:)","title":"pushPop(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pushPop","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/pushPop(_:)","type":"topic","abstract":[{"type":"text","text":"Insert at the root and then extract (after heapify if required) in same operation."},{"text":" ","type":"text"},{"type":"text","text":"This is more effecient than a consecutive push, then pop, which would both"},{"text":" ","type":"text"},{"type":"text","text":"require an O(n) operation (a bubble-up then a bubble-down)."}],"role":"symbol"},"doc://Heap/documentation/Heap/Heap":{"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap","type":"topic","url":"\/documentation\/heap\/heap","role":"symbol","abstract":[{"type":"text","text":"A binary heap is a heap data structure that takes the form of a binary tree."},{"type":"text","text":" "},{"text":"A binary heap has two constraints:","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Heap","kind":"identifier"}],"title":"Heap","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Heap"}]},"doc://Heap/documentation/Heap":{"title":"Heap","identifier":"doc:\/\/Heap\/documentation\/Heap","abstract":[],"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/heap"}}}