{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Heap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Comparable","preciseIdentifier":"s:SL"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"completeness: it is a complete binary tree, with slots filled at the leaf nodes from left to right."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the shape constraint: the value stored in each node is either greater than or equal to (for a max heap)"},{"type":"text","text":" "},{"type":"text","text":"or less than or equal to (for a min heap) the values in the nodeâ€™s children. This is true"},{"type":"text","text":" "},{"type":"text","text":"per level, but sibling nodes have no such sequence with regard to each other."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are two kinds of heaps: min-heaps and max-heaps."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A  binary  tree  maintains O(log n) insertion and deletion times for a"},{"type":"text","text":" "},{"type":"text","text":"heap of size n."}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/heap\/heap"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Heap\/documentation\/Heap\/MaxHeap","doc:\/\/Heap\/documentation\/Heap\/MinHeap"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/Heap\/22IteratableListProtocol0A1PP","doc:\/\/Heap\/s23CustomStringConvertibleP","doc:\/\/Heap\/St","doc:\/\/Heap\/ST"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Heap\/documentation\/Heap\/Heap","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A binary heap is a heap data structure that takes the form of a binary tree."},{"type":"text","text":" "},{"type":"text","text":"A binary heap has two constraints:"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Heap"}],"title":"Heap","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:4HeapAAC","modules":[{"name":"Heap"}],"navigatorTitle":[{"kind":"identifier","text":"Heap"}]},"hierarchy":{"paths":[["doc:\/\/Heap\/documentation\/Heap"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Heap\/documentation\/Heap\/Heap\/init(array:sort:)","doc:\/\/Heap\/documentation\/Heap\/Heap\/init(sort:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Heap\/documentation\/Heap\/Heap\/isEmpty","doc:\/\/Heap\/documentation\/Heap\/Heap\/size"]},{"title":"Instance Methods","identifiers":["doc:\/\/Heap\/documentation\/Heap\/Heap\/next()","doc:\/\/Heap\/documentation\/Heap\/Heap\/peek()","doc:\/\/Heap\/documentation\/Heap\/Heap\/pop()","doc:\/\/Heap\/documentation\/Heap\/Heap\/popPush(_:)","doc:\/\/Heap\/documentation\/Heap\/Heap\/push(_:)","doc:\/\/Heap\/documentation\/Heap\/Heap\/pushPop(_:)","doc:\/\/Heap\/documentation\/Heap\/Heap\/removeAll()"]},{"title":"Default Implementations","identifiers":["doc:\/\/Heap\/documentation\/Heap\/Heap\/CustomStringConvertible-Implementations","doc:\/\/Heap\/documentation\/Heap\/Heap\/Sequence-Implementations"],"generated":true}],"references":{"doc://Heap/documentation/Heap/Heap/pop()":{"role":"symbol","title":"pop()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pop"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Remove the top of the heap and return its value. The top is replaced with"},{"type":"text","text":" "},{"type":"text","text":"the last inserted element, then we call bubbleDown to heapify."}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/pop()","kind":"symbol","type":"topic","url":"\/documentation\/heap\/heap\/pop()"},"doc://Heap/documentation/Heap/Heap/size":{"role":"symbol","title":"size","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"The number of elements in the Heap"}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/size","kind":"symbol","type":"topic","url":"\/documentation\/heap\/heap\/size"},"doc://Heap/documentation/Heap/Heap/init(sort:)":{"role":"symbol","title":"init(sort:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sort"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates an empty heap."},{"type":"text","text":" "},{"type":"text","text":"The sort function determines whether this is a min-heap or max-heap."}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/init(sort:)","kind":"symbol","type":"topic","url":"\/documentation\/heap\/heap\/init(sort:)"},"doc://Heap/22IteratableListProtocol0A1PP":{"type":"unresolvable","title":"IteratableListProtocol.IteratableP","identifier":"doc:\/\/Heap\/22IteratableListProtocol0A1PP"},"doc://Heap/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/Heap\/s23CustomStringConvertibleP"},"doc://Heap/documentation/Heap/Heap":{"role":"symbol","title":"Heap","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Heap"}],"abstract":[{"type":"text","text":"A binary heap is a heap data structure that takes the form of a binary tree."},{"type":"text","text":" "},{"type":"text","text":"A binary heap has two constraints:"}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Heap"}],"url":"\/documentation\/heap\/heap"},"doc://Heap/St":{"type":"unresolvable","title":"Swift.IteratorProtocol","identifier":"doc:\/\/Heap\/St"},"doc://Heap/documentation/Heap/MaxHeap":{"role":"symbol","title":"MaxHeap","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MaxHeap"}],"abstract":[{"type":"text","text":"Convenience initializers for a Max Heap"}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/MaxHeap","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MaxHeap"}],"url":"\/documentation\/heap\/maxheap"},"doc://Heap/documentation/Heap/Heap/next()":{"role":"symbol","title":"next()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"For conformance to Sequence protocol."},{"type":"text","text":" "},{"type":"text","text":"Synonym for pop()."}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/next()","kind":"symbol","type":"topic","url":"\/documentation\/heap\/heap\/next()"},"doc://Heap/documentation/Heap":{"role":"collection","title":"Heap","abstract":[],"identifier":"doc:\/\/Heap\/documentation\/Heap","kind":"symbol","type":"topic","url":"\/documentation\/heap"},"doc://Heap/documentation/Heap/Heap/popPush(_:)":{"role":"symbol","title":"popPush(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"popPush"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Extract then insert in same operation (aka replace root element)."},{"type":"text","text":" "},{"type":"text","text":"Heap will heapify, if required, but the prior top element is returned."},{"type":"text","text":" "},{"type":"text","text":"This is more effecient than a consecutive pop, then push, which would both"},{"type":"text","text":" "},{"type":"text","text":"require an O(n) operation (a bubble-down then a bubble-up)."}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/popPush(_:)","kind":"symbol","type":"topic","url":"\/documentation\/heap\/heap\/poppush(_:)"},"doc://Heap/documentation/Heap/Heap/pushPop(_:)":{"role":"symbol","title":"pushPop(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pushPop"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Insert at the root and then extract (after heapify if required) in same operation."},{"type":"text","text":" "},{"type":"text","text":"This is more effecient than a consecutive push, then pop, which would both"},{"type":"text","text":" "},{"type":"text","text":"require an O(n) operation (a bubble-up then a bubble-down)."}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/pushPop(_:)","kind":"symbol","type":"topic","url":"\/documentation\/heap\/heap\/pushpop(_:)"},"doc://Heap/ST":{"type":"unresolvable","title":"Swift.Sequence","identifier":"doc:\/\/Heap\/ST"},"doc://Heap/documentation/Heap/Heap/peek()":{"role":"symbol","title":"peek()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"peek"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Non-destructively returns the value at the top of the Heap."}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/peek()","kind":"symbol","type":"topic","url":"\/documentation\/heap\/heap\/peek()"},"doc://Heap/documentation/Heap/Heap/CustomStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/CustomStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/heap\/heap\/customstringconvertible-implementations"},"doc://Heap/documentation/Heap/Heap/removeAll()":{"role":"symbol","title":"removeAll()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAll"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Removes the elements of the Heap."}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/removeAll()","kind":"symbol","type":"topic","url":"\/documentation\/heap\/heap\/removeall()"},"doc://Heap/documentation/Heap/Heap/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/Sequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/heap\/heap\/sequence-implementations"},"doc://Heap/documentation/Heap/MinHeap":{"role":"symbol","title":"MinHeap","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MinHeap"}],"abstract":[{"type":"text","text":"Convenience initializers for a Min Heap"}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/MinHeap","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MinHeap"}],"url":"\/documentation\/heap\/minheap"},"doc://Heap/documentation/Heap/Heap/push(_:)":{"role":"symbol","title":"push(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"push"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Insert a new value into the Heap."},{"type":"text","text":" "},{"type":"text","text":"The value is added as a HeapNode at the end of the Heap, then a bubble-up occurs."}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/push(_:)","kind":"symbol","type":"topic","url":"\/documentation\/heap\/heap\/push(_:)"},"doc://Heap/documentation/Heap/Heap/isEmpty":{"role":"symbol","title":"isEmpty","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check if the Heap contains any elements"}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/isEmpty","kind":"symbol","type":"topic","url":"\/documentation\/heap\/heap\/isempty"},"doc://Heap/documentation/Heap/Heap/init(array:sort:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(array:sort:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"array"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"sort"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Convenience initializers for loading a Heap from an array."}],"identifier":"doc:\/\/Heap\/documentation\/Heap\/Heap\/init(array:sort:)","kind":"symbol","type":"topic","url":"\/documentation\/heap\/heap\/init(array:sort:)"}}}