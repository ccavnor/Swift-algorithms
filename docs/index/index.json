{"interfaceLanguages":{"swift":[{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/nodetype","title":"NodeType","type":"associatedtype"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/valuetype","title":"ValueType","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/hasanychild","title":"var hasAnyChild: Bool","type":"property"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/hasbothchildren","title":"var hasBothChildren: Bool","type":"property"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/hasleftchild","title":"var hasLeftChild: Bool","type":"property"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/hasrightchild","title":"var hasRightChild: Bool","type":"property"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/isleaf","title":"var isLeaf: Bool","type":"property"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/isleftchild","title":"var isLeftChild: Bool","type":"property"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/isrightchild","title":"var isRightChild: Bool","type":"property"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/isroot","title":"var isRoot: Bool","type":"property"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/left","title":"var left: Self.NodeType?","type":"property"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/parent","title":"var parent: Self.NodeType?","type":"property"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/right","title":"var right: Self.NodeType?","type":"property"},{"path":"\/documentation\/treeprotocol\/treenodeprotocol\/value","title":"var value: Self.ValueType","type":"property"}],"path":"\/documentation\/treeprotocol\/treenodeprotocol","title":"TreeNodeProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/nodetype","title":"NodeType","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/root","title":"var root: Self.NodeType?","type":"property"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/size","title":"var size: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/contains(value:)","title":"func contains(value: Self.NodeType.ValueType) -> Bool","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/draw()","title":"func draw()","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/height()","title":"func height() -> Int","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/height(node:)","title":"func height(node: Self.NodeType?) -> Int","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/inlefttree(value:)","title":"func inLeftTree(value: Self.NodeType.ValueType) -> Bool","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/inrighttree(value:)","title":"func inRightTree(value: Self.NodeType.ValueType) -> Bool","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/insert(value:)","title":"func insert(value: Self.NodeType.ValueType) throws -> Self","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/map(_:)","title":"func map((Self.NodeType.ValueType) -> Self.NodeType.ValueType) -> [Self.NodeType.ValueType]","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/maximum()","title":"func maximum() -> Self.NodeType?","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/minimum()","title":"func minimum() -> Self.NodeType?","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/predecessor(value:)","title":"func predecessor(value: Self.NodeType.ValueType) -> Self.NodeType.ValueType?","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/remove(value:)","title":"func remove(value: Self.NodeType.ValueType) -> Self","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/search(value:)","title":"func search(value: Self.NodeType.ValueType) -> Self.NodeType?","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/successor(value:)","title":"func successor(value: Self.NodeType.ValueType) -> Self.NodeType.ValueType?","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/toarray()","title":"func toArray() -> [Self.NodeType.ValueType]","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/traverseinorder(completion:)","title":"func traverseInOrder(completion: (Self.NodeType.ValueType) -> Void)","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/traversepostorder(completion:)","title":"func traversePostOrder(completion: (Self.NodeType.ValueType) -> Void)","type":"method"},{"path":"\/documentation\/treeprotocol\/treeprotocol\/traversepreorder(completion:)","title":"func traversePreOrder(completion: (Self.NodeType.ValueType) -> Void)","type":"method"}],"path":"\/documentation\/treeprotocol\/treeprotocol","title":"TreeProtocol","type":"protocol"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/treeprotocol\/treeerror\/invalidinterval","title":"case invalidInterval","type":"case"},{"path":"\/documentation\/treeprotocol\/treeerror\/invalidtree","title":"case invalidTree","type":"case"},{"path":"\/documentation\/treeprotocol\/treeerror\/notbalanced","title":"case notBalanced","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/treeprotocol\/treeerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/treeprotocol\/treeerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/treeprotocol\/treeerror","title":"TreeError","type":"enum"}],"path":"\/documentation\/treeprotocol","title":"TreeProtocol","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}