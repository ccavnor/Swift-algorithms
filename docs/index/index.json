{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/!=(_:_:)-8k344","title":"static func != (Interval<T>, Interval<T>) -> Bool","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/==(_:_:)","title":"static func == (Interval<T>, Interval<T>) -> Bool","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/_(_:_:)-5rfnm","title":"static func > (Interval<T>, Interval<T>) -> Bool","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/_(_:_:)-7y8xw","title":"static func < (Interval<T>, Interval<T>) -> Bool","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/_=(_:_:)-9d8c0","title":"static func >= (Interval<T>, Interval<T>) -> Bool","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/_=(_:_:)-9eq6n","title":"static func <= (Interval<T>, Interval<T>) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/length()","title":"func length() -> Float","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/+(_:_:)","title":"static func + (Interval<T>, Interval<T>) -> Self","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/-(_:_:)","title":"static func - (Interval<T>, Interval<T>) -> Self","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/intervaltree\/interval\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/'...(_:)-3b2qe","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/'...(_:)-5gs8d","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/_(_:_:)-17se","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/_=(_:_:)-60r5a","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/_=(_:_:)-9qjqg","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/intervaltree\/interval\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/intervaltree\/interval\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/!=(_:_:)-1kn7c","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/intervaltree\/interval\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/init(integerliteral:)","title":"convenience init(integerLiteral: Int)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/integerliteraltype","title":"Interval.IntegerLiteralType","type":"typealias"}],"path":"\/documentation\/intervaltree\/interval\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/*(_:_:)","title":"static func * (Interval<T>, Interval<T>) -> Self","type":"op"},{"path":"\/documentation\/intervaltree\/interval\/*=(_:_:)","title":"static func *= (inout Interval<T>, Interval<T>)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/init(exactly:)","title":"convenience init?<T>(exactly: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/magnitude-swift.property","title":"var magnitude: T","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/interval\/magnitude-swift.typealias","title":"Interval.Magnitude","type":"typealias"}],"path":"\/documentation\/intervaltree\/interval\/numeric-implementations","title":"Numeric Implementations","type":"symbol"}],"path":"\/documentation\/intervaltree\/interval","title":"Interval","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/intervalnode\/isoverlapping(node:)","title":"func isOverlapping(node: IntervalNode<T>) -> Bool","type":"method"},{"path":"\/documentation\/intervaltree\/intervalnode\/iswithin(node:)","title":"func isWithin(node: IntervalNode<T>) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/intervalnode\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/intervaltree\/intervalnode\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/intervaltree\/intervalnode","title":"IntervalNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/intervaltree\/init(array:)","title":"convenience init(array: [Interval<T>])","type":"init"},{"path":"\/documentation\/intervaltree\/intervaltree\/init(intervalnode:)","title":"init(intervalNode: IntervalTree<T>.iNode)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/intervaltree\/draw()","title":"func draw()","type":"method"},{"path":"\/documentation\/intervaltree\/intervaltree\/flatmap(_:)","title":"func flatMap((T) -> T) -> [Interval<T>]","type":"method"},{"path":"\/documentation\/intervaltree\/intervaltree\/insert(value:)","title":"func insert(value: Interval<T>) throws -> Self","type":"method"},{"path":"\/documentation\/intervaltree\/intervaltree\/search(value:)","title":"func search(value: Interval<T>) -> BinarySearchTreeNode<Interval<T>>?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/intervaltree\/intervaltree\/inode","title":"IntervalTree.iNode","type":"typealias"}],"path":"\/documentation\/intervaltree\/intervaltree","title":"IntervalTree","type":"class"}],"path":"\/documentation\/intervaltree","title":"IntervalTree","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}